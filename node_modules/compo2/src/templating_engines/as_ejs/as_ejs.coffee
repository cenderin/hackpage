Parser = require './parser'
Compiler = require './compiler'
fs = require 'fs'


# Renders the given AsEjs template.
class AsEjs

  constructor: ->

    # The render function.
    @render_function = null


  # Compiles the given as_ejs text into the render function.
  compile: (text) ->

    # Parse the template into segments.
    segments = Parser.parse text

    # Build the render function from the segments.
    compiler = new Compiler segments
    func_source = compiler.compile()
    @render_function = eval func_source


  # Compiles the file with the given filename into the render function.
  compile_file: (filename, done) ->
    fs.readFile filename, (err, data) =>
      throw new Error "AsEjs.compile_file: Cannot read '#{filename}': #{err}" if err
      @compile data.toString()
      done()


  # HTML escapes the given string.
  escape: (text) ->
    new String(text)
      .replace(/&/g, '&amp;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;')
      .replace(/\x22/g, '&quot;')


  # Renders the given data into the precompiled template with the given name.
  render: (data, out_stream, done_cb) ->
    @render_function.call data, out_stream, done_cb, @escape



module.exports = AsEjs
