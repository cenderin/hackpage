http = require 'http'
querystring = require 'querystring'
StringBuilder = require 'string_builder.js'


# Helper methods for HTTP requests.
class HttpTools

  # Performs a GET request to the given url.
  # Returns the response as one string.
  @get: (url, callback) ->
    http.get url, (response) ->
      result = new StringBuilder()
      response.on 'data', (chunk) -> result.append chunk
      response.on 'end', -> callback result.toString(), response.statusCode


  # POSTs the given data to the given url.
  # Returns the response as one chunk.
  @post_json: (host, port, path, data, callback) ->
    data_payload = JSON.stringify data
    console.log data_payload

    options =
      hostname: host
      port: port
      path: path
      method: 'POST'
      headers:
        'Content-Type': 'application/json'
        'Content-Length': data_payload.length

    request = http.request options, (response) ->
      result = new StringBuilder()
      response.setEncoding 'utf8'
      response.on 'data', (chunk) -> result.append chunk
      response.on 'end', -> callback result.toString(), response.statusCode

    request.on 'error', -> console.log "HttpTools.request error: #{error}"

    request.write data_payload
    request.end()


  # POSTs the given data to the given url.
  # Returns the response as one chunk.
  @request: (method, host, port, path, data, callback) ->
    data_payload = querystring.stringify data

    options =
      hostname: host
      port: port
      path: path
      method: method
      headers:
        'Content-Type': 'application/x-www-form-urlencoded'
        'Content-Length': data_payload.length

    request = http.request options, (response) ->
      result = new StringBuilder()
      response.setEncoding 'utf8'
      response.on 'data', (chunk) -> result.append chunk
      response.on 'end', -> callback result.toString(), response.statusCode

    request.on 'error', -> console.log "HttpTools.request error: #{error}"

    request.write data_payload
    request.end()



module.exports = HttpTools
