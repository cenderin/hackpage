fs = require 'fs'
ArrayTools = require './tools/array_tools'
StringTools = require './tools/string_tools'


# This class represents a folder in the server's document folder.
# It provides tools to handle sections.
class Section

  constructor: (@view_path, @options) ->


  # Returns the directory path of this section.
  base_path: ->
    @base_path_result or= @view_path.substring(0, @view_path.lastIndexOf('/')+1)


  # Returns the file name of the controller, or falsy.
  controller_filename: ->
    ArrayTools.detect @controller_filenames(), (filename) -> fs.existsSync(filename)


  # Returns the possible controller file names.
  controller_filenames: ->
    @controller_filenames_result or= @options['controller_types'].map (extension) =>
      "#{@base_path()}#{@name()}_controller.#{extension}"


  # Returns whether this section has a CoffeeScript controller.
  has_coffeescript_controller: ->
    StringTools.ends_with @controller_filename(), '.coffee'


  # Returns whether this section has a CoffeeScript controller.
  has_javascript_controller: ->
    StringTools.ends_with @controller_filename(), '.js'


  # Returns the name of this section.
  name: ->
    index = @base_path().lastIndexOf('/', @base_path().length-2)
    @base_path().substring(index+1, @base_path().length-1)


  # Returns the possible file names for the view of this section.
  view_filenames: ->
    @view_filenames_result or= [
      "#{@base_path()}#{@name()}.html.as_eco",
      "#{@base_path()}#{@name()}.html.as_ejs",
      "#{@base_path()}#{@name()}.html"
    ]



module.exports = Section
