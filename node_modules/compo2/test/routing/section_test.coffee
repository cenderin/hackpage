[expect, sinon] = require('../test_helper')
Section = require '../../src/section.coffee'


describe 'Section', ->

  beforeEach ->
    @options =
      controller_types: [ 'coffee', 'js' ]
    @section = new Section 'foo/bar/bar.html', @options


  describe 'base_path', ->

    it 'returns the directory that the given view path is in', ->
      expect(@section.base_path()).to.equal 'foo/bar/'


  describe 'controller_filename', ->

    it 'returns the name of the controller file that exists', ->
      @section = new Section './test/routing/section_test_resources/controller_filename/first/first.html', @options
      result = @section.controller_filename()
      expect(result).to.equal './test/routing/section_test_resources/controller_filename/first/first_controller.js'

    it "returns the name of the alternative controller file if the first one doesn't exist", ->
      @section = new Section './test/routing/section_test_resources/controller_filename/second/second.html', @options
      result = @section.controller_filename()
      expect(result).to.equal './test/routing/section_test_resources/controller_filename/second/second_controller.coffee'

    it 'returns falsy if none of the controller files exist', ->
      @section = new Section './test/routing/section_test_resources/controller_filename/none/none.html', @options
      result = @section.controller_filename()
      expect(result).to.be.undefined


  describe 'controller_filenames', ->

    it 'returns the possible file names for controllers', ->
      result = @section.controller_filenames()
      expect(result[0]).to.equal 'foo/bar/bar_controller.coffee'
      expect(result[1]).to.equal 'foo/bar/bar_controller.js'


  describe 'name', ->

    it 'returns the name of this section', ->
      expect(new Section('foo/foo.html').name()).to.equal 'foo'
      expect(new Section('foo/bar/bar.html.as_ejs').name()).to.equal 'bar'
      expect(new Section('foo/bar/bar.html.as_eco').name()).to.equal 'bar'


  describe 'view_filenames', ->

    it 'returns the possible file names for views', ->
      result = @section.view_filenames()
      expect(result[0]).to.equal 'foo/bar/bar.html.as_eco'
      expect(result[1]).to.equal 'foo/bar/bar.html.as_ejs'
      expect(result[2]).to.equal 'foo/bar/bar.html'

