sinon = require('./test_helper').sinon
AsyncFuture = require '../src/async_future'


describe 'constructor', ->
  
  spy = null
  beforeEach ->
    spy = sinon.spy()

  it 'calls the given function', ->
    future = new AsyncFuture spy
    spy.should.have.been.calledOnce

  it 'calls the given function with the given parameters', ->
    future = new AsyncFuture spy, 'one', 'two'
    spy.should.have.been.calledWith 'one', 'two'
    
  describe 'results have arrived before the get method is called', ->
    it 'stores the results until they are picked up with the get method later on', (done) ->
      method = (cb) -> cb('result')
      future = new AsyncFuture method
      future.get (result) ->
        result.should.equal 'result'
        done()

  describe 'results have not arrived when the get method is called', ->
    it 'calls the get method when the results arrive', (done) ->
      method = (cb) -> setTimeout((-> cb('result')), 0)
      future = new AsyncFuture method
      future.get (result) ->
        result.should.equal 'result'
        done()

